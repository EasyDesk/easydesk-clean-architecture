name: Continuous Integration

env:
  DOTNET_VERSION: 8.x

defaults:
  run:
    shell: bash

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
    tags: 
      - "*"

jobs:
  build:
    name: Build & Unit Test
    runs-on: ubuntu-20.04
    env:
      PROJECT_DIRS: |
        src/commons/EasyDesk.Commons
        src/commons/EasyDesk.Extensions.Configuration
        src/commons/EasyDesk.Extensions.DependencyInjection
        src/commons/EasyDesk.Testing
        src/ca/EasyDesk.CleanArchitecture.Domain
        src/ca/EasyDesk.CleanArchitecture.Application
        src/ca/EasyDesk.CleanArchitecture.Infrastructure
        src/ca/EasyDesk.CleanArchitecture.Dal.EfCore
        src/ca/EasyDesk.CleanArchitecture.Dal.SqlServer
        src/ca/EasyDesk.CleanArchitecture.Dal.PostgreSql
        src/ca/EasyDesk.CleanArchitecture.Web
        src/ca/EasyDesk.CleanArchitecture.DependencyInjection
        src/ca/EasyDesk.CleanArchitecture.Testing.Unit
        src/ca/EasyDesk.CleanArchitecture.Testing.Integration
      OUTPUT_DIR: publish
    outputs:
      version: ${{ steps.semver.outputs.version }}
      should-release: ${{ steps.semver.outputs.should-release }}
      is-prerelease: ${{ steps.semver.outputs.is-github-prerelease }}
    steps:
      - id: semver
        name: Checkout
        uses: EasyDesk/action-semver-checkout@v1
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Build
        uses: EasyDesk/action-dotnet-build@v1
        with:
          warnings-as-errors: true
      - name: EasyDesk.Commons Unit Tests
        uses: EasyDesk/action-dotnet-test@v1
        with:
          path: test/commons/EasyDesk.Commons.UnitTests
          test-args: --logger 'GitHubActions'
      - name: EasyDesk.Extensions.Configuration Unit Tests
        uses: EasyDesk/action-dotnet-test@v1
        with:
          path: test/commons/EasyDesk.Extensions.Configuration.UnitTests
          test-args: --logger 'GitHubActions'
      - name: EasyDesk.Testing Unit tests
        uses: EasyDesk/action-dotnet-test@v1
        with:
          path: test/commons/EasyDesk.Testing.UnitTests
          test-args: --logger 'GitHubActions'
      - name: EasyDesk.CleanArchitecture Unit tests
        uses: EasyDesk/action-dotnet-test@v1
        with:
          path: test/ca/EasyDesk.CleanArchitecture.UnitTests
          test-args: --logger 'GitHubActions'
      - name: Pack
        uses: EasyDesk/action-dotnet-pack@v1
        with:
          project-names: ${{ env.PROJECT_DIRS }}
          package-version: ${{ steps.semver.outputs.version }}
          output-dir: ${{ env.OUTPUT_DIR }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nuget-package
          path: ${{ env.OUTPUT_DIR }}

  test:
    name: Integration Test
    runs-on: ubuntu-20.04
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        db-provider:
          - SqlServer
          - PostgreSql
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Build
        uses: EasyDesk/action-dotnet-build@v1
        with:
          warnings-as-errors: true
      - name: Integration tests (${{ matrix.db-provider }})
        uses: EasyDesk/action-dotnet-test@v1
        env:
          DB_PROVIDER: ${{ matrix.db-provider }}
        with:
          path: test/ca/EasyDesk.CleanArchitecture.IntegrationTests
          test-args: --logger 'GitHubActions'

  release:
    name: GitHub Release
    if: needs.build.outputs.should-release == 'true'
    concurrency: release
    needs: [build, test]
    runs-on: ubuntu-20.04
    permissions: write-all
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: nuget-package
      - name: Release
        uses: EasyDesk/action-semver-release@v1
        with:
          version: ${{ needs.build.outputs.version }}
          prerelease: ${{ needs.build.outputs.is-prerelease }}
          files: '*.nupkg'

  deploy:
    name: Deploy to NuGet
    needs: [release]
    concurrency: deploy
    runs-on: ubuntu-20.04
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: nuget-package
      - name: NuGet library deploy
        uses: EasyDesk/job-nuget-library-deploy@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          nuget-api-key: ${{ secrets.NUGET_API_KEY }}

// <auto-generated />
using EasyDesk.CleanArchitecture.Dal.EfCore.Messaging;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyDesk.CleanArchitecture.Dal.Sqlite.Migrations.Messaging;

[DbContext(typeof(MessagingContext))]
[Migration("20250813103205_InitialSchema")]
partial class InitialSchema
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasDefaultSchema("messaging")
            .HasAnnotation("ProductVersion", "9.0.8");

        modelBuilder.Entity("EasyDesk.CleanArchitecture.Dal.EfCore.Messaging.InboxMessage", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("TEXT");

                b.Property<string>("Instant")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("Inbox", "messaging");
            });

        modelBuilder.Entity("EasyDesk.CleanArchitecture.Dal.EfCore.Messaging.OutboxMessage", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<byte[]>("Content")
                    .IsRequired()
                    .HasColumnType("BLOB");

                b.Property<string>("DestinationAddress")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Headers")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<byte[]>("Headers_Old")
                    .IsRequired()
                    .HasColumnType("BLOB");

                b.HasKey("Id");

                b.ToTable("Outbox", "messaging");
            });
#pragma warning restore 612, 618
    }
}
